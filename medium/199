/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public IList<int> RightSideView(TreeNode root) {
        IList<int> res=new List<int>();
        
        if(root==null){
            return res;
        }else{
            
            
            Queue<TreeNode> q=new Queue<TreeNode>();
            q.Enqueue(root);
            while(q.Count!=0){
                int size=q.Count;
                
                for(int i=0;i<size;i++){
                     TreeNode val=q.Dequeue();
                    if(i==size-1){
                          
                         res.Add(val.val);
                    }
                    
                    if(val.left!=null){
                        q.Enqueue(val.left);
                        
                    }
                    if(val.right!=null){
                        q.Enqueue(val.right);
                        
                    }
                    
                }
               
            }
        }
        
        return res;
    }
}
