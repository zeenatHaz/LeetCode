public class Solution {
    public int[][] Merge(int[][] intervals) {
       if (intervals == null || intervals.Length == 0 || intervals.Length == 1)
            return intervals;
        
        List<int[]> res = new List<int[]>();
        
        intervals = intervals.OrderBy(x => x[0]).ToArray();
        
        int[] start=intervals[0];// [1,3]
        
        int[] end=intervals[1];//2,6 here
        int[] curr_interval=intervals[0];//input 1,3 to the res first nand then statr comparing.
        
        
        res.Add(curr_interval);
        for(int i=1;i<intervals.Length;i++){
          int curr_start=curr_interval[0];
          int curr_end=curr_interval[1];
          Console.WriteLine(curr_start+":"+curr_end);
          int next_start=intervals[i][0];
          int next_end=intervals[i][1];
          Console.WriteLine(next_start+":"+next_end);
           if(curr_end>= next_start){
               curr_end=Math.Max(curr_end,next_end);
               curr_interval[1]=curr_end;
               
           } else{
               //update curr_interval
               curr_interval=intervals[i];
               res.Add(curr_interval);
           }
            
        }
        
        
        return res.ToArray();
    }
}
