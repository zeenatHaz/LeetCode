/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public void Flatten(TreeNode root) {
        if(root==null){
            return ;
        }
        
        Stack<TreeNode> st=new Stack<TreeNode>();
        TreeNode head=null;
        st.Push(root);
        
        while(st.Count!=0){
            TreeNode curr=st.Peek();
            st.Pop();
            if(curr!=null){
                  st.Push(curr.right);
                  st.Push(curr.left);
                  Console.Write(curr.val+"-->");
                 if(head==null){
                      head = curr;
                 }
               
            else{
                //remaining elements
                head.right = curr;
                head  = head.right;
                 
            }
           head.left = null;  
            }
           
          
        }
    }
}
