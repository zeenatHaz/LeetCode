/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public IList<IList<int>> LevelOrderBottom(TreeNode root) {
        
        IList<IList<int>> res=new List<IList<int>>();
        
        
        if(root==null){
            return res;
        }
        Queue<TreeNode> queue=new Queue<TreeNode>();
       
        queue.Enqueue(root);
          Stack<List<int>> st=new Stack<List<int>>();
        while(queue.Count()>0){
            
         int count = queue.Count;
            List<int> lst=new List<int>();
            
          
            for(int i=0;i<count;i++){
                  TreeNode t=queue.Dequeue();
                  lst.Add(t.val);
                
                if(t.left!=null){
                    queue.Enqueue(t.left);
                }
                if(t.right!=null){
                    queue.Enqueue(t.right);
                }
                
            }
            st.Push(lst);
            var x=st.Peek();
            foreach(var ele in x){
                Console.WriteLine(ele);
            }
           
        }
        while (st.Count > 0)
            res.Add(st.Pop());
       
        return res;
    }
}
