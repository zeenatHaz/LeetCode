/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public bool LeafSimilar(TreeNode root1, TreeNode root2) {
        
       
        List<int> l1=new List<int>();
        List<int> l2=new List<int>();
        //do a dfs and find all all the leaf nodes.
        dfs(root1,l1);
        dfs(root2,l2);
        foreach(var ele in l1){
            Console.Write(ele +" ");
        }
          
            Console.WriteLine(" ");
        
         foreach(var ele in l2){
            Console.Write(ele +" ");
        }
        return l1.SequenceEqual(l2);
    }
    private void dfs(TreeNode root,List<int> leaves){
        if(root==null)
            return;
        if(root.left==null && root.right==null){
            leaves.Add(root.val);
        }
        dfs(root.left,leaves);
        dfs(root.right,leaves);
    }
}
