/*
// Definition for a Node.
public class Node {
    public int val;
    public IList<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, IList<Node> _children) {
        val = _val;
        children = _children;
    }
}
*/

public class Solution {
    public int MaxDepth(Node root) {
        if(root==null)
            return 0;
        
        Queue<Node> q=new Queue<Node>();
        int depth=0;
        q.Enqueue(root);
        while(q.Count!=0){
            int size=q.Count;
            
             for(int i=0;i<size;i++){
                 Node curr=q.Dequeue();
                 foreach(var child in curr.children ){
                     q.Enqueue(child);
                 }
             }
            depth++;
        }
        
        return depth;
    }
}
