/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
     int res = int.MaxValue;
     TreeNode  pre=null;
    public int MinDiffInBST(TreeNode root) {
      if(root==null)
          return 0;
        Stack<TreeNode> st=new Stack<TreeNode>();
        while(st.Count>0 || root!=null){
            
            while(root!=null){
                //keep adding it to the stack.
                st.Push(root);
                root=root.left;
            }
            TreeNode popped=st.Pop();
            if(pre!=null){
                res=Math.Min(res,popped.val-pre.val);
            }
            pre=popped;
            root=popped.right;
            
        }
        return res;
    }
    
   
}
