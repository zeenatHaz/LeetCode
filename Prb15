1st Approach --Brute force. Time Complexity O(n3)


  public IList<IList<int>> ThreeSum(int[] nums) {
       List<int> arr = new List<int>();
            IList<IList<int>> arr1 = new List<IList<int>>();
            for (int i = 0; i < nums.Length; i++)
            {
                for (int j = 0; i < nums.Length; j++)
                {
                    for (int k = 0; i < nums.Length; k++)
                    {
                        if (nums[i] != nums[j] && nums[i] != nums[k] && nums[j] != nums[k])
                        {
                            if (nums[i] + nums[j] + nums[k] == 0)
                            {
                                arr.Add(nums[i]);
                                arr.Add(nums[j]);
                                arr.Add(nums[k]);
                            }
                            arr1.Add(arr);
                            arr.Clear();

                        }
                    }
                }
            }

            return arr1;
    }
    
    
    2nd--Two pointer approach
    
    
